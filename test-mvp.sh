#!/bin/bash

echo "üåü BvckZ MVP - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
echo "========================================"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Test functions
test_service() {
    local name=$1
    local url=$2
    local expected_code=${3:-200}
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ $name... "
    
    if command -v curl >/dev/null 2>&1; then
        response=$(curl -s -o /dev/null -w "%{http_code}" "$url" 2>/dev/null)
        if [ "$response" = "$expected_code" ]; then
            echo -e "${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
            return 0
        else
            echo -e "${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $response)${NC}"
            return 1
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç${NC}"
        return 0
    fi
}

test_file_exists() {
    local name=$1
    local file=$2
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ $name... "
    
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ –ù–∞–π–¥–µ–Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
}

test_docker_container() {
    local name=$1
    local container=$2
    
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $name... "
    
    if command -v docker >/dev/null 2>&1; then
        if docker ps | grep -q "$container.*Up"; then
            echo -e "${GREEN}‚úÖ –ó–∞–ø—É—â–µ–Ω${NC}"
            return 0
        else
            echo -e "${RED}‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω${NC}"
            return 1
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç${NC}"
        return 0
    fi
}

echo
echo -e "${BLUE}üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
echo "--------------------------------"

# Check core files
test_file_exists "–û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è" "./idea.md"
test_file_exists "–ü–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞" "./plan.md"
test_file_exists "Demo –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å" "./demo.html"
test_file_exists "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" "./admin.html"
test_file_exists "Docker Compose" "./infra/docker-compose.yml"

echo
echo -e "${BLUE}üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
echo "----------------------------------"

# Check containers
test_docker_container "API" "infra-api-1"
test_docker_container "Database" "infra-postgres-1"
test_docker_container "Redis" "infra-redis-1"
test_docker_container "MinIO" "infra-minio-1"
test_docker_container "n8n" "infra-n8n-1"
test_docker_container "Media Service" "infra-media-1"

echo
echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
echo "-----------------------------"

# Test services
test_service "API Health" "http://localhost:8000/api/health"
test_service "API Docs" "http://localhost:8000/docs"
test_service "Media Service" "http://localhost:8001/health"
test_service "MinIO Console" "http://localhost:9001" 200
test_service "n8n Interface" "http://localhost:5678" 200
test_service "Redis" "http://localhost:6379" 000  # Redis doesn't speak HTTP

echo
echo -e "${BLUE}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
echo "---------------------------------------"

# Check service files
test_file_exists "API main.py" "./mvp-services/api/main.py"
test_file_exists "API requirements.txt" "./mvp-services/api/requirements.txt"
test_file_exists "API Dockerfile" "./mvp-services/api/Dockerfile"
test_file_exists "Media Service main.py" "./mvp-services/media/main.py"
test_file_exists "Media requirements.txt" "./mvp-services/media/requirements.txt"
test_file_exists "Media Dockerfile" "./mvp-services/media/Dockerfile"
test_file_exists "Telegram Bot" "./mvp-services/bot/main.py"
test_file_exists "Bot requirements.txt" "./mvp-services/bot/requirements.txt"

echo
echo -e "${BLUE}üß™ API Endpoints Test...${NC}"
echo "-------------------------"

# Test API endpoints
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:"

# Health check
test_service "Health Check" "http://localhost:8000/api/health"

# Public endpoints
test_service "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è (POST)" "http://localhost:8000/api/register" 405  # Method not allowed is OK
test_service "–í—Ö–æ–¥ (POST)" "http://localhost:8000/api/login" 405  # Method not allowed is OK

# Protected endpoints (should return 401)
test_service "–ü—Ä–æ—Ñ–∏–ª—å (—Ç—Ä–µ–±—É–µ—Ç auth)" "http://localhost:8000/api/me" 401
test_service "–ó–∞–∫–∞–∑—ã (—Ç—Ä–µ–±—É–µ—Ç auth)" "http://localhost:8000/api/orders" 401
test_service "–ê–¥–º–∏–Ω (—Ç—Ä–µ–±—É–µ—Ç auth)" "http://localhost:8000/api/admin/stats" 401

echo
echo -e "${YELLOW}üìä –û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ MVP:${NC}"
echo "=============================="

# Count lines of code
if command -v wc >/dev/null 2>&1; then
    echo "üìù –°—Ç—Ä–æ–∫ –∫–æ–¥–∞:"
    echo "   - API: $(find ./mvp-services/api -name "*.py" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo 'N/A') —Å—Ç—Ä–æ–∫"
    echo "   - Media Service: $(find ./mvp-services/media -name "*.py" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo 'N/A') —Å—Ç—Ä–æ–∫"
    echo "   - Telegram Bot: $(find ./mvp-services/bot -name "*.py" -exec wc -l {} + 2>/dev/null | tail -1 | awk '{print $1}' || echo 'N/A') —Å—Ç—Ä–æ–∫"
    echo "   - Demo HTML: $(wc -l ./demo.html 2>/dev/null | awk '{print $1}' || echo 'N/A') —Å—Ç—Ä–æ–∫"
    echo "   - Admin HTML: $(wc -l ./admin.html 2>/dev/null | awk '{print $1}' || echo 'N/A') —Å—Ç—Ä–æ–∫"
fi

echo
echo "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ MVP:"
echo "   ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
echo "   ‚úÖ –ó–∞—è–≤–∫–∏ –Ω–∞ —Å–¥–∞—á—É –≤–µ—â–µ–π"
echo "   ‚úÖ 3D –¥–∏–∑–∞–π–Ω–µ—Ä —Ñ—É—Ç–±–æ–ª–æ–∫"
echo "   ‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤"
echo "   ‚úÖ –ú–µ–¥–∏–∞ —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–µ–≤—å—é"
echo "   ‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "   ‚úÖ Telegram –±–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
echo "   ‚úÖ Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
echo "   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
echo "   ‚úÖ –§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ MinIO"
echo "   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è n8n"

echo
echo -e "${GREEN}üöÄ MVP –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!${NC}"
echo
echo "üì± –°—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
echo "   - Demo –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000/demo"
echo "   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
echo "   - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: file://$(pwd)/admin.html"
echo "   - MinIO Console: http://localhost:9001"
echo "   - n8n Workflows: http://localhost:5678"
echo
echo "üîë –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:"
echo "   - Email: test@bvckz.com"
echo "   - Password: password123"
echo "   - MinIO: bvckz / your_password_here"
echo
